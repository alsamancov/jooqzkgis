/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
 */
@java.lang.Deprecated
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StCreateoverview extends AbstractRoutine<Object> {

    private static final long serialVersionUID = 1592636669;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("regclass"), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> TAB = createParameter("tab", org.jooq.impl.DefaultDataType.getDefaultDataType("regclass"), false, false);

    /**
     * The parameter <code>public.st_createoverview.col</code>.
     */
    public static final Parameter<String> COL = createParameter("col", org.jooq.impl.SQLDataType.VARCHAR, false, false);

    /**
     * The parameter <code>public.st_createoverview.factor</code>.
     */
    public static final Parameter<Integer> FACTOR = createParameter("factor", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_createoverview.algo</code>.
     */
    public static final Parameter<String> ALGO = createParameter("algo", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("'NearestNeighbour'::text", org.jooq.impl.SQLDataType.CLOB)), true, false);

    /**
     * Create a new routine call instance
     */
    public StCreateoverview() {
        super("st_createoverview", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("regclass"));

        setReturnParameter(RETURN_VALUE);
        addInParameter(TAB);
        addInParameter(COL);
        addInParameter(FACTOR);
        addInParameter(ALGO);
    }

    /**
     * Set the <code>tab</code> parameter IN value to the routine
     */
    public void setTab(Object value) {
        setValue(TAB, value);
    }

    /**
     * Set the <code>tab</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTab(Field<Object> field) {
        setField(TAB, field);
    }

    /**
     * Set the <code>col</code> parameter IN value to the routine
     */
    public void setCol(String value) {
        setValue(COL, value);
    }

    /**
     * Set the <code>col</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setCol(Field<String> field) {
        setField(COL, field);
    }

    /**
     * Set the <code>factor</code> parameter IN value to the routine
     */
    public void setFactor(Integer value) {
        setValue(FACTOR, value);
    }

    /**
     * Set the <code>factor</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setFactor(Field<Integer> field) {
        setField(FACTOR, field);
    }

    /**
     * Set the <code>algo</code> parameter IN value to the routine
     */
    public void setAlgo(String value) {
        setValue(ALGO, value);
    }

    /**
     * Set the <code>algo</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setAlgo(Field<String> field) {
        setField(ALGO, field);
    }
}
