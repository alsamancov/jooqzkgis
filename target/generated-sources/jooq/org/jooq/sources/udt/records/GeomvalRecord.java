/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.udt.records;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UDTRecordImpl;
import org.jooq.sources.udt.Geomval;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GeomvalRecord extends UDTRecordImpl<GeomvalRecord> implements Record2<Geometry, Double> {

    private static final long serialVersionUID = -77337153;

    /**
     * Setter for <code>public.geomval.geom</code>.
     */
    public void setGeom(Geometry value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.geomval.geom</code>.
     */
    public Geometry getGeom() {
        return (Geometry) get(0);
    }

    /**
     * Setter for <code>public.geomval.val</code>.
     */
    public void setVal(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.geomval.val</code>.
     */
    public Double getVal() {
        return (Double) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Geometry, Double> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Geometry, Double> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Geometry> field1() {
        return Geomval.GEOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return Geomval.VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Geometry component1() {
        return getGeom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Geometry value1() {
        return getGeom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GeomvalRecord value1(Geometry value) {
        setGeom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GeomvalRecord value2(Double value) {
        setVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GeomvalRecord values(Geometry value1, Double value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GeomvalRecord
     */
    public GeomvalRecord() {
        super(Geomval.GEOMVAL);
    }

    /**
     * Create a detached, initialised GeomvalRecord
     */
    public GeomvalRecord(Geometry geom, Double val) {
        super(Geomval.GEOMVAL);

        set(0, geom);
        set(1, val);
    }
}
