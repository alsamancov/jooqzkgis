/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StRastertoworldcoord extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -277201471;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RAST = createParameter("rast", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_rastertoworldcoord.columnx</code>.
     */
    public static final Parameter<Integer> COLUMNX = createParameter("columnx", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_rastertoworldcoord.rowy</code>.
     */
    public static final Parameter<Integer> ROWY = createParameter("rowy", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_rastertoworldcoord.longitude</code>.
     */
    public static final Parameter<Double> LONGITUDE = createParameter("longitude", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_rastertoworldcoord.latitude</code>.
     */
    public static final Parameter<Double> LATITUDE = createParameter("latitude", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * Create a new routine call instance
     */
    public StRastertoworldcoord() {
        super("st_rastertoworldcoord", Public.PUBLIC);

        addInParameter(RAST);
        addInParameter(COLUMNX);
        addInParameter(ROWY);
        addOutParameter(LONGITUDE);
        addOutParameter(LATITUDE);
    }

    /**
     * Set the <code>rast</code> parameter IN value to the routine
     */
    public void setRast(Object value) {
        setValue(RAST, value);
    }

    /**
     * Set the <code>columnx</code> parameter IN value to the routine
     */
    public void setColumnx(Integer value) {
        setValue(COLUMNX, value);
    }

    /**
     * Set the <code>rowy</code> parameter IN value to the routine
     */
    public void setRowy(Integer value) {
        setValue(ROWY, value);
    }

    /**
     * Get the <code>longitude</code> parameter OUT value from the routine
     */
    public Double getLongitude() {
        return get(LONGITUDE);
    }

    /**
     * Get the <code>latitude</code> parameter OUT value from the routine
     */
    public Double getLatitude() {
        return get(LATITUDE);
    }
}
