/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.impl.DSL;
import org.jooq.sources.tables.Companies;
import org.jooq.sources.tables.GeographyColumns;
import org.jooq.sources.tables.GeometryColumns;
import org.jooq.sources.tables.RasterColumns;
import org.jooq.sources.tables.RasterOverviews;
import org.jooq.sources.tables.SpatialRefSys;
import org.jooq.sources.tables.StApproxhistogram;
import org.jooq.sources.tables.StApproxquantile;
import org.jooq.sources.tables.StDump;
import org.jooq.sources.tables.StDumpaspolygons;
import org.jooq.sources.tables.StDumppoints;
import org.jooq.sources.tables.StDumprings;
import org.jooq.sources.tables.StDumpvalues;
import org.jooq.sources.tables.StGdaldrivers;
import org.jooq.sources.tables.StHistogram;
import org.jooq.sources.tables.StIntersection;
import org.jooq.sources.tables.StMakeemptycoverage;
import org.jooq.sources.tables.StPixelascentroids;
import org.jooq.sources.tables.StPixelaspoints;
import org.jooq.sources.tables.StPixelaspolygons;
import org.jooq.sources.tables.StPixelofvalue;
import org.jooq.sources.tables.StQuantile;
import org.jooq.sources.tables.StRetile;
import org.jooq.sources.tables.StSubdivide;
import org.jooq.sources.tables.StTile;
import org.jooq.sources.tables.StValuecount;
import org.jooq.sources.tables.StValuepercent;
import org.jooq.sources.tables._StHistogram;
import org.jooq.sources.tables._StPixelaspolygons;
import org.jooq.sources.tables._StQuantile;
import org.jooq.sources.tables._StTile;
import org.jooq.sources.tables._StValuecount;
import org.jooq.sources.tables.records.StApproxhistogramRecord;
import org.jooq.sources.tables.records.StApproxquantileRecord;
import org.jooq.sources.tables.records.StDumpRecord;
import org.jooq.sources.tables.records.StDumpaspolygonsRecord;
import org.jooq.sources.tables.records.StDumppointsRecord;
import org.jooq.sources.tables.records.StDumpringsRecord;
import org.jooq.sources.tables.records.StDumpvaluesRecord;
import org.jooq.sources.tables.records.StGdaldriversRecord;
import org.jooq.sources.tables.records.StHistogramRecord;
import org.jooq.sources.tables.records.StIntersectionRecord;
import org.jooq.sources.tables.records.StMakeemptycoverageRecord;
import org.jooq.sources.tables.records.StPixelascentroidsRecord;
import org.jooq.sources.tables.records.StPixelaspointsRecord;
import org.jooq.sources.tables.records.StPixelaspolygonsRecord;
import org.jooq.sources.tables.records.StPixelofvalueRecord;
import org.jooq.sources.tables.records.StQuantileRecord;
import org.jooq.sources.tables.records.StRetileRecord;
import org.jooq.sources.tables.records.StSubdivideRecord;
import org.jooq.sources.tables.records.StTileRecord;
import org.jooq.sources.tables.records.StValuecountRecord;
import org.jooq.sources.tables.records.StValuepercentRecord;
import org.jooq.sources.tables.records._StHistogramRecord;
import org.jooq.sources.tables.records._StPixelaspolygonsRecord;
import org.jooq.sources.tables.records._StQuantileRecord;
import org.jooq.sources.tables.records._StTileRecord;
import org.jooq.sources.tables.records._StValuecountRecord;


/**
 * Convenience access to all tables in public
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>public._st_histogram</code>.
     */
    public static final _StHistogram _ST_HISTOGRAM = org.jooq.sources.tables._StHistogram._ST_HISTOGRAM;

    /**
     * Call <code>public._st_histogram</code>.
     */
    public static Result<_StHistogramRecord> _ST_HISTOGRAM(Configuration configuration, String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double samplePercent, Integer bins, Double[] width, Boolean right) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables._StHistogram._ST_HISTOGRAM.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, bins, width, right)).fetch();
    }

    /**
     * Get <code>public._st_histogram</code> as a table.
     */
    public static _StHistogram _ST_HISTOGRAM(String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double samplePercent, Integer bins, Double[] width, Boolean right) {
        return org.jooq.sources.tables._StHistogram._ST_HISTOGRAM.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, bins, width, right);
    }

    /**
     * Get <code>public._st_histogram</code> as a table.
     */
    public static _StHistogram _ST_HISTOGRAM(Field<String> rastertable, Field<String> rastercolumn, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double> samplePercent, Field<Integer> bins, Field<Double[]> width, Field<Boolean> right) {
        return org.jooq.sources.tables._StHistogram._ST_HISTOGRAM.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, bins, width, right);
    }

    /**
     * The table <code>public._st_pixelaspolygons</code>.
     */
    public static final _StPixelaspolygons _ST_PIXELASPOLYGONS = org.jooq.sources.tables._StPixelaspolygons._ST_PIXELASPOLYGONS;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<_StPixelaspolygonsRecord> _ST_PIXELASPOLYGONS(Configuration configuration, Object rast, Integer band, Integer columnx, Integer rowy, Boolean excludeNodataValue) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables._StPixelaspolygons._ST_PIXELASPOLYGONS.call(rast, band, columnx, rowy, excludeNodataValue)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static _StPixelaspolygons _ST_PIXELASPOLYGONS(Object rast, Integer band, Integer columnx, Integer rowy, Boolean excludeNodataValue) {
        return org.jooq.sources.tables._StPixelaspolygons._ST_PIXELASPOLYGONS.call(rast, band, columnx, rowy, excludeNodataValue);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static _StPixelaspolygons _ST_PIXELASPOLYGONS(Field<Object> rast, Field<Integer> band, Field<Integer> columnx, Field<Integer> rowy, Field<Boolean> excludeNodataValue) {
        return org.jooq.sources.tables._StPixelaspolygons._ST_PIXELASPOLYGONS.call(rast, band, columnx, rowy, excludeNodataValue);
    }

    /**
     * The table <code>public._st_quantile</code>.
     */
    public static final _StQuantile _ST_QUANTILE = org.jooq.sources.tables._StQuantile._ST_QUANTILE;

    /**
     * Call <code>public._st_quantile</code>.
     */
    public static Result<_StQuantileRecord> _ST_QUANTILE(Configuration configuration, String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double samplePercent, Double[] quantiles) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables._StQuantile._ST_QUANTILE.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, quantiles)).fetch();
    }

    /**
     * Get <code>public._st_quantile</code> as a table.
     */
    public static _StQuantile _ST_QUANTILE(String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double samplePercent, Double[] quantiles) {
        return org.jooq.sources.tables._StQuantile._ST_QUANTILE.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, quantiles);
    }

    /**
     * Get <code>public._st_quantile</code> as a table.
     */
    public static _StQuantile _ST_QUANTILE(Field<String> rastertable, Field<String> rastercolumn, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double> samplePercent, Field<Double[]> quantiles) {
        return org.jooq.sources.tables._StQuantile._ST_QUANTILE.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, quantiles);
    }

    /**
     * The table <code>public._st_tile</code>.
     */
    public static final _StTile _ST_TILE = org.jooq.sources.tables._StTile._ST_TILE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<_StTileRecord> _ST_TILE(Configuration configuration, Object rast, Integer width, Integer height, Integer[] nband, Boolean padwithnodata, Double nodataval) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables._StTile._ST_TILE.call(rast, width, height, nband, padwithnodata, nodataval)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static _StTile _ST_TILE(Object rast, Integer width, Integer height, Integer[] nband, Boolean padwithnodata, Double nodataval) {
        return org.jooq.sources.tables._StTile._ST_TILE.call(rast, width, height, nband, padwithnodata, nodataval);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static _StTile _ST_TILE(Field<Object> rast, Field<Integer> width, Field<Integer> height, Field<Integer[]> nband, Field<Boolean> padwithnodata, Field<Double> nodataval) {
        return org.jooq.sources.tables._StTile._ST_TILE.call(rast, width, height, nband, padwithnodata, nodataval);
    }

    /**
     * The table <code>public._st_valuecount</code>.
     */
    public static final _StValuecount _ST_VALUECOUNT = org.jooq.sources.tables._StValuecount._ST_VALUECOUNT;

    /**
     * Call <code>public._st_valuecount</code>.
     */
    public static Result<_StValuecountRecord> _ST_VALUECOUNT(Configuration configuration, String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double[] searchvalues, Double roundto) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables._StValuecount._ST_VALUECOUNT.call(rastertable, rastercolumn, nband, excludeNodataValue, searchvalues, roundto)).fetch();
    }

    /**
     * Get <code>public._st_valuecount</code> as a table.
     */
    public static _StValuecount _ST_VALUECOUNT(String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double[] searchvalues, Double roundto) {
        return org.jooq.sources.tables._StValuecount._ST_VALUECOUNT.call(rastertable, rastercolumn, nband, excludeNodataValue, searchvalues, roundto);
    }

    /**
     * Get <code>public._st_valuecount</code> as a table.
     */
    public static _StValuecount _ST_VALUECOUNT(Field<String> rastertable, Field<String> rastercolumn, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double[]> searchvalues, Field<Double> roundto) {
        return org.jooq.sources.tables._StValuecount._ST_VALUECOUNT.call(rastertable, rastercolumn, nband, excludeNodataValue, searchvalues, roundto);
    }

    /**
     * The table <code>public.companies</code>.
     */
    public static final Companies COMPANIES = org.jooq.sources.tables.Companies.COMPANIES;

    /**
     * The table <code>public.geography_columns</code>.
     */
    public static final GeographyColumns GEOGRAPHY_COLUMNS = org.jooq.sources.tables.GeographyColumns.GEOGRAPHY_COLUMNS;

    /**
     * The table <code>public.geometry_columns</code>.
     */
    public static final GeometryColumns GEOMETRY_COLUMNS = org.jooq.sources.tables.GeometryColumns.GEOMETRY_COLUMNS;

    /**
     * The table <code>public.raster_columns</code>.
     */
    public static final RasterColumns RASTER_COLUMNS = org.jooq.sources.tables.RasterColumns.RASTER_COLUMNS;

    /**
     * The table <code>public.raster_overviews</code>.
     */
    public static final RasterOverviews RASTER_OVERVIEWS = org.jooq.sources.tables.RasterOverviews.RASTER_OVERVIEWS;

    /**
     * The table <code>public.spatial_ref_sys</code>.
     */
    public static final SpatialRefSys SPATIAL_REF_SYS = org.jooq.sources.tables.SpatialRefSys.SPATIAL_REF_SYS;

    /**
     * The table <code>public.st_approxhistogram</code>.
     */
    public static final StApproxhistogram ST_APPROXHISTOGRAM = org.jooq.sources.tables.StApproxhistogram.ST_APPROXHISTOGRAM;

    /**
     * Call <code>public.st_approxhistogram</code>.
     */
    public static Result<StApproxhistogramRecord> ST_APPROXHISTOGRAM(Configuration configuration, String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double samplePercent, Integer bins, Double[] width, Boolean right) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StApproxhistogram.ST_APPROXHISTOGRAM.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, bins, width, right)).fetch();
    }

    /**
     * Get <code>public.st_approxhistogram</code> as a table.
     */
    public static StApproxhistogram ST_APPROXHISTOGRAM(String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double samplePercent, Integer bins, Double[] width, Boolean right) {
        return org.jooq.sources.tables.StApproxhistogram.ST_APPROXHISTOGRAM.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, bins, width, right);
    }

    /**
     * Get <code>public.st_approxhistogram</code> as a table.
     */
    public static StApproxhistogram ST_APPROXHISTOGRAM(Field<String> rastertable, Field<String> rastercolumn, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double> samplePercent, Field<Integer> bins, Field<Double[]> width, Field<Boolean> right) {
        return org.jooq.sources.tables.StApproxhistogram.ST_APPROXHISTOGRAM.call(rastertable, rastercolumn, nband, excludeNodataValue, samplePercent, bins, width, right);
    }

    /**
     * The table <code>public.st_approxquantile</code>.
     */
    public static final StApproxquantile ST_APPROXQUANTILE = org.jooq.sources.tables.StApproxquantile.ST_APPROXQUANTILE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StApproxquantileRecord> ST_APPROXQUANTILE(Configuration configuration, Object rast, Integer nband, Boolean excludeNodataValue, Double samplePercent, Double[] quantiles) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StApproxquantile.ST_APPROXQUANTILE.call(rast, nband, excludeNodataValue, samplePercent, quantiles)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StApproxquantile ST_APPROXQUANTILE(Object rast, Integer nband, Boolean excludeNodataValue, Double samplePercent, Double[] quantiles) {
        return org.jooq.sources.tables.StApproxquantile.ST_APPROXQUANTILE.call(rast, nband, excludeNodataValue, samplePercent, quantiles);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StApproxquantile ST_APPROXQUANTILE(Field<Object> rast, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double> samplePercent, Field<Double[]> quantiles) {
        return org.jooq.sources.tables.StApproxquantile.ST_APPROXQUANTILE.call(rast, nband, excludeNodataValue, samplePercent, quantiles);
    }

    /**
     * The table <code>public.st_dump</code>.
     */
    public static final StDump ST_DUMP = org.jooq.sources.tables.StDump.ST_DUMP;

    /**
     * Call <code>public.st_dump</code>.
     */
    public static Result<StDumpRecord> ST_DUMP(Configuration configuration, Geometry __1) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StDump.ST_DUMP.call(__1)).fetch();
    }

    /**
     * Get <code>public.st_dump</code> as a table.
     */
    public static StDump ST_DUMP(Geometry __1) {
        return org.jooq.sources.tables.StDump.ST_DUMP.call(__1);
    }

    /**
     * Get <code>public.st_dump</code> as a table.
     */
    public static StDump ST_DUMP(Field<Geometry> __1) {
        return org.jooq.sources.tables.StDump.ST_DUMP.call(__1);
    }

    /**
     * The table <code>public.st_dumpaspolygons</code>.
     */
    public static final StDumpaspolygons ST_DUMPASPOLYGONS = org.jooq.sources.tables.StDumpaspolygons.ST_DUMPASPOLYGONS;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StDumpaspolygonsRecord> ST_DUMPASPOLYGONS(Configuration configuration, Object rast, Integer band, Boolean excludeNodataValue) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StDumpaspolygons.ST_DUMPASPOLYGONS.call(rast, band, excludeNodataValue)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumpaspolygons ST_DUMPASPOLYGONS(Object rast, Integer band, Boolean excludeNodataValue) {
        return org.jooq.sources.tables.StDumpaspolygons.ST_DUMPASPOLYGONS.call(rast, band, excludeNodataValue);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumpaspolygons ST_DUMPASPOLYGONS(Field<Object> rast, Field<Integer> band, Field<Boolean> excludeNodataValue) {
        return org.jooq.sources.tables.StDumpaspolygons.ST_DUMPASPOLYGONS.call(rast, band, excludeNodataValue);
    }

    /**
     * The table <code>public.st_dumppoints</code>.
     */
    public static final StDumppoints ST_DUMPPOINTS = org.jooq.sources.tables.StDumppoints.ST_DUMPPOINTS;

    /**
     * Call <code>public.st_dumppoints</code>.
     */
    public static Result<StDumppointsRecord> ST_DUMPPOINTS(Configuration configuration, Geometry __1) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StDumppoints.ST_DUMPPOINTS.call(__1)).fetch();
    }

    /**
     * Get <code>public.st_dumppoints</code> as a table.
     */
    public static StDumppoints ST_DUMPPOINTS(Geometry __1) {
        return org.jooq.sources.tables.StDumppoints.ST_DUMPPOINTS.call(__1);
    }

    /**
     * Get <code>public.st_dumppoints</code> as a table.
     */
    public static StDumppoints ST_DUMPPOINTS(Field<Geometry> __1) {
        return org.jooq.sources.tables.StDumppoints.ST_DUMPPOINTS.call(__1);
    }

    /**
     * The table <code>public.st_dumprings</code>.
     */
    public static final StDumprings ST_DUMPRINGS = org.jooq.sources.tables.StDumprings.ST_DUMPRINGS;

    /**
     * Call <code>public.st_dumprings</code>.
     */
    public static Result<StDumpringsRecord> ST_DUMPRINGS(Configuration configuration, Geometry __1) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StDumprings.ST_DUMPRINGS.call(__1)).fetch();
    }

    /**
     * Get <code>public.st_dumprings</code> as a table.
     */
    public static StDumprings ST_DUMPRINGS(Geometry __1) {
        return org.jooq.sources.tables.StDumprings.ST_DUMPRINGS.call(__1);
    }

    /**
     * Get <code>public.st_dumprings</code> as a table.
     */
    public static StDumprings ST_DUMPRINGS(Field<Geometry> __1) {
        return org.jooq.sources.tables.StDumprings.ST_DUMPRINGS.call(__1);
    }

    /**
     * The table <code>public.st_dumpvalues</code>.
     */
    public static final StDumpvalues ST_DUMPVALUES = org.jooq.sources.tables.StDumpvalues.ST_DUMPVALUES;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StDumpvaluesRecord> ST_DUMPVALUES(Configuration configuration, Object rast, Integer[] nband, Boolean excludeNodataValue) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StDumpvalues.ST_DUMPVALUES.call(rast, nband, excludeNodataValue)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumpvalues ST_DUMPVALUES(Object rast, Integer[] nband, Boolean excludeNodataValue) {
        return org.jooq.sources.tables.StDumpvalues.ST_DUMPVALUES.call(rast, nband, excludeNodataValue);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StDumpvalues ST_DUMPVALUES(Field<Object> rast, Field<Integer[]> nband, Field<Boolean> excludeNodataValue) {
        return org.jooq.sources.tables.StDumpvalues.ST_DUMPVALUES.call(rast, nband, excludeNodataValue);
    }

    /**
     * The table <code>public.st_gdaldrivers</code>.
     */
    public static final StGdaldrivers ST_GDALDRIVERS = org.jooq.sources.tables.StGdaldrivers.ST_GDALDRIVERS;

    /**
     * Call <code>public.st_gdaldrivers</code>.
     */
    public static Result<StGdaldriversRecord> ST_GDALDRIVERS(Configuration configuration) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StGdaldrivers.ST_GDALDRIVERS.call()).fetch();
    }

    /**
     * Get <code>public.st_gdaldrivers</code> as a table.
     */
    public static StGdaldrivers ST_GDALDRIVERS() {
        return org.jooq.sources.tables.StGdaldrivers.ST_GDALDRIVERS.call();
    }

    /**
     * The table <code>public.st_histogram</code>.
     */
    public static final StHistogram ST_HISTOGRAM = org.jooq.sources.tables.StHistogram.ST_HISTOGRAM;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StHistogramRecord> ST_HISTOGRAM(Configuration configuration, Object rast, Integer nband, Boolean excludeNodataValue, Integer bins, Boolean right) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StHistogram.ST_HISTOGRAM.call(rast, nband, excludeNodataValue, bins, right)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StHistogram ST_HISTOGRAM(Object rast, Integer nband, Boolean excludeNodataValue, Integer bins, Boolean right) {
        return org.jooq.sources.tables.StHistogram.ST_HISTOGRAM.call(rast, nband, excludeNodataValue, bins, right);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StHistogram ST_HISTOGRAM(Field<Object> rast, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Integer> bins, Field<Boolean> right) {
        return org.jooq.sources.tables.StHistogram.ST_HISTOGRAM.call(rast, nband, excludeNodataValue, bins, right);
    }

    /**
     * The table <code>public.st_intersection</code>.
     */
    public static final StIntersection ST_INTERSECTION = org.jooq.sources.tables.StIntersection.ST_INTERSECTION;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StIntersectionRecord> ST_INTERSECTION(Configuration configuration, Geometry geomin, Object rast, Integer band) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StIntersection.ST_INTERSECTION.call(geomin, rast, band)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StIntersection ST_INTERSECTION(Geometry geomin, Object rast, Integer band) {
        return org.jooq.sources.tables.StIntersection.ST_INTERSECTION.call(geomin, rast, band);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StIntersection ST_INTERSECTION(Field<Geometry> geomin, Field<Object> rast, Field<Integer> band) {
        return org.jooq.sources.tables.StIntersection.ST_INTERSECTION.call(geomin, rast, band);
    }

    /**
     * The table <code>public.st_makeemptycoverage</code>.
     */
    public static final StMakeemptycoverage ST_MAKEEMPTYCOVERAGE = org.jooq.sources.tables.StMakeemptycoverage.ST_MAKEEMPTYCOVERAGE;

    /**
     * Call <code>public.st_makeemptycoverage</code>.
     */
    public static Result<StMakeemptycoverageRecord> ST_MAKEEMPTYCOVERAGE(Configuration configuration, Integer tilewidth, Integer tileheight, Integer width, Integer height, Double upperleftx, Double upperlefty, Double scalex, Double scaley, Double skewx, Double skewy, Integer srid) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StMakeemptycoverage.ST_MAKEEMPTYCOVERAGE.call(tilewidth, tileheight, width, height, upperleftx, upperlefty, scalex, scaley, skewx, skewy, srid)).fetch();
    }

    /**
     * Get <code>public.st_makeemptycoverage</code> as a table.
     */
    public static StMakeemptycoverage ST_MAKEEMPTYCOVERAGE(Integer tilewidth, Integer tileheight, Integer width, Integer height, Double upperleftx, Double upperlefty, Double scalex, Double scaley, Double skewx, Double skewy, Integer srid) {
        return org.jooq.sources.tables.StMakeemptycoverage.ST_MAKEEMPTYCOVERAGE.call(tilewidth, tileheight, width, height, upperleftx, upperlefty, scalex, scaley, skewx, skewy, srid);
    }

    /**
     * Get <code>public.st_makeemptycoverage</code> as a table.
     */
    public static StMakeemptycoverage ST_MAKEEMPTYCOVERAGE(Field<Integer> tilewidth, Field<Integer> tileheight, Field<Integer> width, Field<Integer> height, Field<Double> upperleftx, Field<Double> upperlefty, Field<Double> scalex, Field<Double> scaley, Field<Double> skewx, Field<Double> skewy, Field<Integer> srid) {
        return org.jooq.sources.tables.StMakeemptycoverage.ST_MAKEEMPTYCOVERAGE.call(tilewidth, tileheight, width, height, upperleftx, upperlefty, scalex, scaley, skewx, skewy, srid);
    }

    /**
     * The table <code>public.st_pixelascentroids</code>.
     */
    public static final StPixelascentroids ST_PIXELASCENTROIDS = org.jooq.sources.tables.StPixelascentroids.ST_PIXELASCENTROIDS;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StPixelascentroidsRecord> ST_PIXELASCENTROIDS(Configuration configuration, Object rast, Integer band, Boolean excludeNodataValue) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StPixelascentroids.ST_PIXELASCENTROIDS.call(rast, band, excludeNodataValue)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelascentroids ST_PIXELASCENTROIDS(Object rast, Integer band, Boolean excludeNodataValue) {
        return org.jooq.sources.tables.StPixelascentroids.ST_PIXELASCENTROIDS.call(rast, band, excludeNodataValue);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelascentroids ST_PIXELASCENTROIDS(Field<Object> rast, Field<Integer> band, Field<Boolean> excludeNodataValue) {
        return org.jooq.sources.tables.StPixelascentroids.ST_PIXELASCENTROIDS.call(rast, band, excludeNodataValue);
    }

    /**
     * The table <code>public.st_pixelaspoints</code>.
     */
    public static final StPixelaspoints ST_PIXELASPOINTS = org.jooq.sources.tables.StPixelaspoints.ST_PIXELASPOINTS;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StPixelaspointsRecord> ST_PIXELASPOINTS(Configuration configuration, Object rast, Integer band, Boolean excludeNodataValue) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StPixelaspoints.ST_PIXELASPOINTS.call(rast, band, excludeNodataValue)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelaspoints ST_PIXELASPOINTS(Object rast, Integer band, Boolean excludeNodataValue) {
        return org.jooq.sources.tables.StPixelaspoints.ST_PIXELASPOINTS.call(rast, band, excludeNodataValue);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelaspoints ST_PIXELASPOINTS(Field<Object> rast, Field<Integer> band, Field<Boolean> excludeNodataValue) {
        return org.jooq.sources.tables.StPixelaspoints.ST_PIXELASPOINTS.call(rast, band, excludeNodataValue);
    }

    /**
     * The table <code>public.st_pixelaspolygons</code>.
     */
    public static final StPixelaspolygons ST_PIXELASPOLYGONS = org.jooq.sources.tables.StPixelaspolygons.ST_PIXELASPOLYGONS;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StPixelaspolygonsRecord> ST_PIXELASPOLYGONS(Configuration configuration, Object rast, Integer band, Boolean excludeNodataValue) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StPixelaspolygons.ST_PIXELASPOLYGONS.call(rast, band, excludeNodataValue)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelaspolygons ST_PIXELASPOLYGONS(Object rast, Integer band, Boolean excludeNodataValue) {
        return org.jooq.sources.tables.StPixelaspolygons.ST_PIXELASPOLYGONS.call(rast, band, excludeNodataValue);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelaspolygons ST_PIXELASPOLYGONS(Field<Object> rast, Field<Integer> band, Field<Boolean> excludeNodataValue) {
        return org.jooq.sources.tables.StPixelaspolygons.ST_PIXELASPOLYGONS.call(rast, band, excludeNodataValue);
    }

    /**
     * The table <code>public.st_pixelofvalue</code>.
     */
    public static final StPixelofvalue ST_PIXELOFVALUE = org.jooq.sources.tables.StPixelofvalue.ST_PIXELOFVALUE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StPixelofvalueRecord> ST_PIXELOFVALUE(Configuration configuration, Object rast, Integer nband, Double[] search, Boolean excludeNodataValue) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StPixelofvalue.ST_PIXELOFVALUE.call(rast, nband, search, excludeNodataValue)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelofvalue ST_PIXELOFVALUE(Object rast, Integer nband, Double[] search, Boolean excludeNodataValue) {
        return org.jooq.sources.tables.StPixelofvalue.ST_PIXELOFVALUE.call(rast, nband, search, excludeNodataValue);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StPixelofvalue ST_PIXELOFVALUE(Field<Object> rast, Field<Integer> nband, Field<Double[]> search, Field<Boolean> excludeNodataValue) {
        return org.jooq.sources.tables.StPixelofvalue.ST_PIXELOFVALUE.call(rast, nband, search, excludeNodataValue);
    }

    /**
     * The table <code>public.st_quantile</code>.
     */
    public static final StQuantile ST_QUANTILE = org.jooq.sources.tables.StQuantile.ST_QUANTILE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StQuantileRecord> ST_QUANTILE(Configuration configuration, Object rast, Integer nband, Boolean excludeNodataValue, Double[] quantiles) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StQuantile.ST_QUANTILE.call(rast, nband, excludeNodataValue, quantiles)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StQuantile ST_QUANTILE(Object rast, Integer nband, Boolean excludeNodataValue, Double[] quantiles) {
        return org.jooq.sources.tables.StQuantile.ST_QUANTILE.call(rast, nband, excludeNodataValue, quantiles);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StQuantile ST_QUANTILE(Field<Object> rast, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double[]> quantiles) {
        return org.jooq.sources.tables.StQuantile.ST_QUANTILE.call(rast, nband, excludeNodataValue, quantiles);
    }

    /**
     * The table <code>public.st_retile</code>.
     */
    public static final StRetile ST_RETILE = org.jooq.sources.tables.StRetile.ST_RETILE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StRetileRecord> ST_RETILE(Configuration configuration, Object tab, String col, Geometry ext, Double sfx, Double sfy, Integer tw, Integer th, String algo) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StRetile.ST_RETILE.call(tab, col, ext, sfx, sfy, tw, th, algo)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StRetile ST_RETILE(Object tab, String col, Geometry ext, Double sfx, Double sfy, Integer tw, Integer th, String algo) {
        return org.jooq.sources.tables.StRetile.ST_RETILE.call(tab, col, ext, sfx, sfy, tw, th, algo);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StRetile ST_RETILE(Field<Object> tab, Field<String> col, Field<Geometry> ext, Field<Double> sfx, Field<Double> sfy, Field<Integer> tw, Field<Integer> th, Field<String> algo) {
        return org.jooq.sources.tables.StRetile.ST_RETILE.call(tab, col, ext, sfx, sfy, tw, th, algo);
    }

    /**
     * The table <code>public.st_subdivide</code>.
     */
    public static final StSubdivide ST_SUBDIVIDE = org.jooq.sources.tables.StSubdivide.ST_SUBDIVIDE;

    /**
     * Call <code>public.st_subdivide</code>.
     */
    public static Result<StSubdivideRecord> ST_SUBDIVIDE(Configuration configuration, Geometry geom, Integer maxvertices) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StSubdivide.ST_SUBDIVIDE.call(geom, maxvertices)).fetch();
    }

    /**
     * Get <code>public.st_subdivide</code> as a table.
     */
    public static StSubdivide ST_SUBDIVIDE(Geometry geom, Integer maxvertices) {
        return org.jooq.sources.tables.StSubdivide.ST_SUBDIVIDE.call(geom, maxvertices);
    }

    /**
     * Get <code>public.st_subdivide</code> as a table.
     */
    public static StSubdivide ST_SUBDIVIDE(Field<Geometry> geom, Field<Integer> maxvertices) {
        return org.jooq.sources.tables.StSubdivide.ST_SUBDIVIDE.call(geom, maxvertices);
    }

    /**
     * The table <code>public.st_tile</code>.
     */
    public static final StTile ST_TILE = org.jooq.sources.tables.StTile.ST_TILE;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StTileRecord> ST_TILE(Configuration configuration, Object rast, Integer[] nband, Integer width, Integer height, Boolean padwithnodata, Double nodataval) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StTile.ST_TILE.call(rast, nband, width, height, padwithnodata, nodataval)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StTile ST_TILE(Object rast, Integer[] nband, Integer width, Integer height, Boolean padwithnodata, Double nodataval) {
        return org.jooq.sources.tables.StTile.ST_TILE.call(rast, nband, width, height, padwithnodata, nodataval);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StTile ST_TILE(Field<Object> rast, Field<Integer[]> nband, Field<Integer> width, Field<Integer> height, Field<Boolean> padwithnodata, Field<Double> nodataval) {
        return org.jooq.sources.tables.StTile.ST_TILE.call(rast, nband, width, height, padwithnodata, nodataval);
    }

    /**
     * The table <code>public.st_valuecount</code>.
     */
    public static final StValuecount ST_VALUECOUNT = org.jooq.sources.tables.StValuecount.ST_VALUECOUNT;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StValuecountRecord> ST_VALUECOUNT(Configuration configuration, Object rast, Integer nband, Boolean excludeNodataValue, Double[] searchvalues, Double roundto) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StValuecount.ST_VALUECOUNT.call(rast, nband, excludeNodataValue, searchvalues, roundto)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StValuecount ST_VALUECOUNT(Object rast, Integer nband, Boolean excludeNodataValue, Double[] searchvalues, Double roundto) {
        return org.jooq.sources.tables.StValuecount.ST_VALUECOUNT.call(rast, nband, excludeNodataValue, searchvalues, roundto);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StValuecount ST_VALUECOUNT(Field<Object> rast, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double[]> searchvalues, Field<Double> roundto) {
        return org.jooq.sources.tables.StValuecount.ST_VALUECOUNT.call(rast, nband, excludeNodataValue, searchvalues, roundto);
    }

    /**
     * The table <code>public.st_valuepercent</code>.
     */
    public static final StValuepercent ST_VALUEPERCENT = org.jooq.sources.tables.StValuepercent.ST_VALUEPERCENT;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<StValuepercentRecord> ST_VALUEPERCENT(Configuration configuration, Object rast, Integer nband, Boolean excludeNodataValue, Double[] searchvalues, Double roundto) {
        return DSL.using(configuration).selectFrom(org.jooq.sources.tables.StValuepercent.ST_VALUEPERCENT.call(rast, nband, excludeNodataValue, searchvalues, roundto)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StValuepercent ST_VALUEPERCENT(Object rast, Integer nband, Boolean excludeNodataValue, Double[] searchvalues, Double roundto) {
        return org.jooq.sources.tables.StValuepercent.ST_VALUEPERCENT.call(rast, nband, excludeNodataValue, searchvalues, roundto);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static StValuepercent ST_VALUEPERCENT(Field<Object> rast, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double[]> searchvalues, Field<Double> roundto) {
        return org.jooq.sources.tables.StValuepercent.ST_VALUEPERCENT.call(rast, nband, excludeNodataValue, searchvalues, roundto);
    }
}
