/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StExpand6 extends AbstractRoutine<Geometry> {

    private static final long serialVersionUID = 1094660583;

    /**
     * The parameter <code>public.st_expand.RETURN_VALUE</code>.
     */
    public static final Parameter<Geometry> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * The parameter <code>public.st_expand.geom</code>.
     */
    public static final Parameter<Geometry> GEOM = createParameter("geom", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * The parameter <code>public.st_expand.dx</code>.
     */
    public static final Parameter<Double> DX = createParameter("dx", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_expand.dy</code>.
     */
    public static final Parameter<Double> DY = createParameter("dy", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_expand.dz</code>.
     */
    public static final Parameter<Double> DZ = createParameter("dz", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.DOUBLE)), true, false);

    /**
     * The parameter <code>public.st_expand.dm</code>.
     */
    public static final Parameter<Double> DM = createParameter("dm", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.DOUBLE)), true, false);

    /**
     * Create a new routine call instance
     */
    public StExpand6() {
        super("st_expand", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), new GeometryConverter());

        setReturnParameter(RETURN_VALUE);
        addInParameter(GEOM);
        addInParameter(DX);
        addInParameter(DY);
        addInParameter(DZ);
        addInParameter(DM);
        setOverloaded(true);
    }

    /**
     * Set the <code>geom</code> parameter IN value to the routine
     */
    public void setGeom(Geometry value) {
        setValue(GEOM, value);
    }

    /**
     * Set the <code>geom</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setGeom(Field<Geometry> field) {
        setField(GEOM, field);
    }

    /**
     * Set the <code>dx</code> parameter IN value to the routine
     */
    public void setDx(Double value) {
        setValue(DX, value);
    }

    /**
     * Set the <code>dx</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setDx(Field<Double> field) {
        setField(DX, field);
    }

    /**
     * Set the <code>dy</code> parameter IN value to the routine
     */
    public void setDy(Double value) {
        setValue(DY, value);
    }

    /**
     * Set the <code>dy</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setDy(Field<Double> field) {
        setField(DY, field);
    }

    /**
     * Set the <code>dz</code> parameter IN value to the routine
     */
    public void setDz(Double value) {
        setValue(DZ, value);
    }

    /**
     * Set the <code>dz</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setDz(Field<Double> field) {
        setField(DZ, field);
    }

    /**
     * Set the <code>dm</code> parameter IN value to the routine
     */
    public void setDm(Double value) {
        setValue(DM, value);
    }

    /**
     * Set the <code>dm</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setDm(Field<Double> field) {
        setField(DM, field);
    }
}
