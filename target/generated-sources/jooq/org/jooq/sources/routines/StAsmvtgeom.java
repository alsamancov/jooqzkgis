/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StAsmvtgeom extends AbstractRoutine<Geometry> {

    private static final long serialVersionUID = -1248113047;

    /**
     * The parameter <code>public.st_asmvtgeom.RETURN_VALUE</code>.
     */
    public static final Parameter<Geometry> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * The parameter <code>public.st_asmvtgeom.geom</code>.
     */
    public static final Parameter<Geometry> GEOM = createParameter("geom", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> BOUNDS = createParameter("bounds", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_asmvtgeom.extent</code>.
     */
    public static final Parameter<Integer> EXTENT = createParameter("extent", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("4096", org.jooq.impl.SQLDataType.INTEGER)), true, false);

    /**
     * The parameter <code>public.st_asmvtgeom.buffer</code>.
     */
    public static final Parameter<Integer> BUFFER = createParameter("buffer", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("256", org.jooq.impl.SQLDataType.INTEGER)), true, false);

    /**
     * The parameter <code>public.st_asmvtgeom.clip_geom</code>.
     */
    public static final Parameter<Boolean> CLIP_GEOM = createParameter("clip_geom", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public StAsmvtgeom() {
        super("st_asmvtgeom", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), new GeometryConverter());

        setReturnParameter(RETURN_VALUE);
        addInParameter(GEOM);
        addInParameter(BOUNDS);
        addInParameter(EXTENT);
        addInParameter(BUFFER);
        addInParameter(CLIP_GEOM);
    }

    /**
     * Set the <code>geom</code> parameter IN value to the routine
     */
    public void setGeom(Geometry value) {
        setValue(GEOM, value);
    }

    /**
     * Set the <code>geom</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setGeom(Field<Geometry> field) {
        setField(GEOM, field);
    }

    /**
     * Set the <code>bounds</code> parameter IN value to the routine
     */
    public void setBounds(Object value) {
        setValue(BOUNDS, value);
    }

    /**
     * Set the <code>bounds</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setBounds(Field<Object> field) {
        setField(BOUNDS, field);
    }

    /**
     * Set the <code>extent</code> parameter IN value to the routine
     */
    public void setExtent(Integer value) {
        setValue(EXTENT, value);
    }

    /**
     * Set the <code>extent</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setExtent(Field<Integer> field) {
        setField(EXTENT, field);
    }

    /**
     * Set the <code>buffer</code> parameter IN value to the routine
     */
    public void setBuffer(Integer value) {
        setValue(BUFFER, value);
    }

    /**
     * Set the <code>buffer</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setBuffer(Field<Integer> field) {
        setField(BUFFER, field);
    }

    /**
     * Set the <code>clip_geom</code> parameter IN value to the routine
     */
    public void setClipGeom(Boolean value) {
        setValue(CLIP_GEOM, value);
    }

    /**
     * Set the <code>clip_geom</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setClipGeom(Field<Boolean> field) {
        setField(CLIP_GEOM, field);
    }
}
