/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StWorldtorastercoord2 extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -1497821114;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RAST = createParameter("rast", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_worldtorastercoord.pt</code>.
     */
    public static final Parameter<Geometry> PT = createParameter("pt", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * The parameter <code>public.st_worldtorastercoord.columnx</code>.
     */
    public static final Parameter<Integer> COLUMNX = createParameter("columnx", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_worldtorastercoord.rowy</code>.
     */
    public static final Parameter<Integer> ROWY = createParameter("rowy", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public StWorldtorastercoord2() {
        super("st_worldtorastercoord", Public.PUBLIC);

        addInParameter(RAST);
        addInParameter(PT);
        addOutParameter(COLUMNX);
        addOutParameter(ROWY);
        setOverloaded(true);
    }

    /**
     * Set the <code>rast</code> parameter IN value to the routine
     */
    public void setRast(Object value) {
        setValue(RAST, value);
    }

    /**
     * Set the <code>pt</code> parameter IN value to the routine
     */
    public void setPt(Geometry value) {
        setValue(PT, value);
    }

    /**
     * Get the <code>columnx</code> parameter OUT value from the routine
     */
    public Integer getColumnx() {
        return get(COLUMNX);
    }

    /**
     * Get the <code>rowy</code> parameter OUT value from the routine
     */
    public Integer getRowy() {
        return get(ROWY);
    }
}
