/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
 */
@java.lang.Deprecated
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StSetgeotransform extends AbstractRoutine<Object> {

    private static final long serialVersionUID = -1694626498;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RAST = createParameter("rast", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_setgeotransform.imag</code>.
     */
    public static final Parameter<Double> IMAG = createParameter("imag", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_setgeotransform.jmag</code>.
     */
    public static final Parameter<Double> JMAG = createParameter("jmag", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_setgeotransform.theta_i</code>.
     */
    public static final Parameter<Double> THETA_I = createParameter("theta_i", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_setgeotransform.theta_ij</code>.
     */
    public static final Parameter<Double> THETA_IJ = createParameter("theta_ij", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_setgeotransform.xoffset</code>.
     */
    public static final Parameter<Double> XOFFSET = createParameter("xoffset", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>public.st_setgeotransform.yoffset</code>.
     */
    public static final Parameter<Double> YOFFSET = createParameter("yoffset", org.jooq.impl.SQLDataType.DOUBLE, false, false);

    /**
     * Create a new routine call instance
     */
    public StSetgeotransform() {
        super("st_setgeotransform", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"));

        setReturnParameter(RETURN_VALUE);
        addInParameter(RAST);
        addInParameter(IMAG);
        addInParameter(JMAG);
        addInParameter(THETA_I);
        addInParameter(THETA_IJ);
        addInParameter(XOFFSET);
        addInParameter(YOFFSET);
    }

    /**
     * Set the <code>rast</code> parameter IN value to the routine
     */
    public void setRast(Object value) {
        setValue(RAST, value);
    }

    /**
     * Set the <code>rast</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRast(Field<Object> field) {
        setField(RAST, field);
    }

    /**
     * Set the <code>imag</code> parameter IN value to the routine
     */
    public void setImag(Double value) {
        setValue(IMAG, value);
    }

    /**
     * Set the <code>imag</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setImag(Field<Double> field) {
        setField(IMAG, field);
    }

    /**
     * Set the <code>jmag</code> parameter IN value to the routine
     */
    public void setJmag(Double value) {
        setValue(JMAG, value);
    }

    /**
     * Set the <code>jmag</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setJmag(Field<Double> field) {
        setField(JMAG, field);
    }

    /**
     * Set the <code>theta_i</code> parameter IN value to the routine
     */
    public void setThetaI(Double value) {
        setValue(THETA_I, value);
    }

    /**
     * Set the <code>theta_i</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setThetaI(Field<Double> field) {
        setField(THETA_I, field);
    }

    /**
     * Set the <code>theta_ij</code> parameter IN value to the routine
     */
    public void setThetaIj(Double value) {
        setValue(THETA_IJ, value);
    }

    /**
     * Set the <code>theta_ij</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setThetaIj(Field<Double> field) {
        setField(THETA_IJ, field);
    }

    /**
     * Set the <code>xoffset</code> parameter IN value to the routine
     */
    public void setXoffset(Double value) {
        setValue(XOFFSET, value);
    }

    /**
     * Set the <code>xoffset</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setXoffset(Field<Double> field) {
        setField(XOFFSET, field);
    }

    /**
     * Set the <code>yoffset</code> parameter IN value to the routine
     */
    public void setYoffset(Double value) {
        setValue(YOFFSET, value);
    }

    /**
     * Set the <code>yoffset</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setYoffset(Field<Double> field) {
        setField(YOFFSET, field);
    }
}
