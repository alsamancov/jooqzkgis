/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
 */
@java.lang.Deprecated
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StAddband6 extends AbstractRoutine<Object> {

    private static final long serialVersionUID = -237417878;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RAST = createParameter("rast", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_addband.index</code>.
     */
    public static final Parameter<Integer> INDEX = createParameter("index", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_addband.outdbfile</code>.
     */
    public static final Parameter<String> OUTDBFILE = createParameter("outdbfile", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.st_addband.outdbindex</code>.
     */
    public static final Parameter<Integer[]> OUTDBINDEX = createParameter("outdbindex", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), false, false);

    /**
     * The parameter <code>public.st_addband.nodataval</code>.
     */
    public static final Parameter<Double> NODATAVAL = createParameter("nodataval", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.field("NULL::double precision", org.jooq.impl.SQLDataType.DOUBLE)), true, false);

    /**
     * Create a new routine call instance
     */
    public StAddband6() {
        super("st_addband", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"));

        setReturnParameter(RETURN_VALUE);
        addInParameter(RAST);
        addInParameter(INDEX);
        addInParameter(OUTDBFILE);
        addInParameter(OUTDBINDEX);
        addInParameter(NODATAVAL);
        setOverloaded(true);
    }

    /**
     * Set the <code>rast</code> parameter IN value to the routine
     */
    public void setRast(Object value) {
        setValue(RAST, value);
    }

    /**
     * Set the <code>rast</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRast(Field<Object> field) {
        setField(RAST, field);
    }

    /**
     * Set the <code>index</code> parameter IN value to the routine
     */
    public void setIndex(Integer value) {
        setValue(INDEX, value);
    }

    /**
     * Set the <code>index</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setIndex(Field<Integer> field) {
        setField(INDEX, field);
    }

    /**
     * Set the <code>outdbfile</code> parameter IN value to the routine
     */
    public void setOutdbfile(String value) {
        setValue(OUTDBFILE, value);
    }

    /**
     * Set the <code>outdbfile</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setOutdbfile(Field<String> field) {
        setField(OUTDBFILE, field);
    }

    /**
     * Set the <code>outdbindex</code> parameter IN value to the routine
     */
    public void setOutdbindex(Integer... value) {
        setValue(OUTDBINDEX, value);
    }

    /**
     * Set the <code>outdbindex</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setOutdbindex(Field<Integer[]> field) {
        setField(OUTDBINDEX, field);
    }

    /**
     * Set the <code>nodataval</code> parameter IN value to the routine
     */
    public void setNodataval(Double value) {
        setValue(NODATAVAL, value);
    }

    /**
     * Set the <code>nodataval</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setNodataval(Field<Double> field) {
        setField(NODATAVAL, field);
    }
}
