/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.sources.Public;
import org.jooq.sources.tables.records._StValuecountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _StValuecount extends TableImpl<_StValuecountRecord> {

    private static final long serialVersionUID = -748496572;

    /**
     * The reference instance of <code>public._st_valuecount</code>
     */
    public static final _StValuecount _ST_VALUECOUNT = new _StValuecount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<_StValuecountRecord> getRecordType() {
        return _StValuecountRecord.class;
    }

    /**
     * The column <code>public._st_valuecount.value</code>.
     */
    public final TableField<_StValuecountRecord, Double> VALUE = createField("value", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public._st_valuecount.value</code>.
     */
    public final TableField<_StValuecountRecord, Double> VALUE = createField("value", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public._st_valuecount.count</code>.
     */
    public final TableField<_StValuecountRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public._st_valuecount.count</code>.
     */
    public final TableField<_StValuecountRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public._st_valuecount.percent</code>.
     */
    public final TableField<_StValuecountRecord, Double> PERCENT = createField("percent", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public._st_valuecount.percent</code>.
     */
    public final TableField<_StValuecountRecord, Double> PERCENT = createField("percent", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>public._st_valuecount</code> table reference
     */
    public _StValuecount() {
        this(DSL.name("_st_valuecount"), null);
    }

    /**
     * Create an aliased <code>public._st_valuecount</code> table reference
     */
    public _StValuecount(String alias) {
        this(DSL.name(alias), _ST_VALUECOUNT);
    }

    /**
     * Create an aliased <code>public._st_valuecount</code> table reference
     */
    public _StValuecount(Name alias) {
        this(alias, _ST_VALUECOUNT);
    }

    private _StValuecount(Name alias, Table<_StValuecountRecord> aliased) {
        this(alias, aliased, new Field[6]);
    }

    private _StValuecount(Name alias, Table<_StValuecountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _StValuecount as(String alias) {
        return new _StValuecount(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public _StValuecount as(Name alias) {
        return new _StValuecount(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public _StValuecount rename(String name) {
        return new _StValuecount(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public _StValuecount rename(Name name) {
        return new _StValuecount(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public _StValuecount call(String rastertable, String rastercolumn, Integer nband, Boolean excludeNodataValue, Double[] searchvalues, Double roundto) {
        return new _StValuecount(DSL.name(getName()), null, new Field[] { 
              DSL.val(rastertable, org.jooq.impl.SQLDataType.CLOB)
            , DSL.val(rastercolumn, org.jooq.impl.SQLDataType.CLOB)
            , DSL.val(nband, org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)))
            , DSL.val(excludeNodataValue, org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)))
            , DSL.val(searchvalues, org.jooq.impl.SQLDataType.FLOAT.getArrayDataType())
            , DSL.val(roundto, org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.DOUBLE)))
        });
    }

    /**
     * Call this table-valued function
     */
    public _StValuecount call(Field<String> rastertable, Field<String> rastercolumn, Field<Integer> nband, Field<Boolean> excludeNodataValue, Field<Double[]> searchvalues, Field<Double> roundto) {
        return new _StValuecount(DSL.name(getName()), null, new Field[] { 
              rastertable
            , rastercolumn
            , nband
            , excludeNodataValue
            , searchvalues
            , roundto
        });
    }
}
