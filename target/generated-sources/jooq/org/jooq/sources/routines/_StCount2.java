/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _StCount2 extends AbstractRoutine<Long> {

    private static final long serialVersionUID = -1020098664;

    /**
     * The parameter <code>public._st_count.RETURN_VALUE</code>.
     */
    public static final Parameter<Long> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>public._st_count.rastertable</code>.
     */
    public static final Parameter<String> RASTERTABLE = createParameter("rastertable", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public._st_count.rastercolumn</code>.
     */
    public static final Parameter<String> RASTERCOLUMN = createParameter("rastercolumn", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public._st_count.nband</code>.
     */
    public static final Parameter<Integer> NBAND = createParameter("nband", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), true, false);

    /**
     * The parameter <code>public._st_count.exclude_nodata_value</code>.
     */
    public static final Parameter<Boolean> EXCLUDE_NODATA_VALUE = createParameter("exclude_nodata_value", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * The parameter <code>public._st_count.sample_percent</code>.
     */
    public static final Parameter<Double> SAMPLE_PERCENT = createParameter("sample_percent", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.DOUBLE)), true, false);

    /**
     * Create a new routine call instance
     */
    public _StCount2() {
        super("_st_count", Public.PUBLIC, org.jooq.impl.SQLDataType.BIGINT);

        setReturnParameter(RETURN_VALUE);
        addInParameter(RASTERTABLE);
        addInParameter(RASTERCOLUMN);
        addInParameter(NBAND);
        addInParameter(EXCLUDE_NODATA_VALUE);
        addInParameter(SAMPLE_PERCENT);
        setOverloaded(true);
    }

    /**
     * Set the <code>rastertable</code> parameter IN value to the routine
     */
    public void setRastertable(String value) {
        setValue(RASTERTABLE, value);
    }

    /**
     * Set the <code>rastertable</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRastertable(Field<String> field) {
        setField(RASTERTABLE, field);
    }

    /**
     * Set the <code>rastercolumn</code> parameter IN value to the routine
     */
    public void setRastercolumn(String value) {
        setValue(RASTERCOLUMN, value);
    }

    /**
     * Set the <code>rastercolumn</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRastercolumn(Field<String> field) {
        setField(RASTERCOLUMN, field);
    }

    /**
     * Set the <code>nband</code> parameter IN value to the routine
     */
    public void setNband(Integer value) {
        setValue(NBAND, value);
    }

    /**
     * Set the <code>nband</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setNband(Field<Integer> field) {
        setField(NBAND, field);
    }

    /**
     * Set the <code>exclude_nodata_value</code> parameter IN value to the routine
     */
    public void setExcludeNodataValue(Boolean value) {
        setValue(EXCLUDE_NODATA_VALUE, value);
    }

    /**
     * Set the <code>exclude_nodata_value</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setExcludeNodataValue(Field<Boolean> field) {
        setField(EXCLUDE_NODATA_VALUE, field);
    }

    /**
     * Set the <code>sample_percent</code> parameter IN value to the routine
     */
    public void setSamplePercent(Double value) {
        setValue(SAMPLE_PERCENT, value);
    }

    /**
     * Set the <code>sample_percent</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setSamplePercent(Field<Double> field) {
        setField(SAMPLE_PERCENT, field);
    }
}
