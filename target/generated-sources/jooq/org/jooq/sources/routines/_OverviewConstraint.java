/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _OverviewConstraint extends AbstractRoutine<Boolean> {

    private static final long serialVersionUID = -1391196403;

    /**
     * The parameter <code>public._overview_constraint.RETURN_VALUE</code>.
     */
    public static final Parameter<Boolean> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.BOOLEAN, false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> OV = createParameter("ov", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public._overview_constraint.factor</code>.
     */
    public static final Parameter<Integer> FACTOR = createParameter("factor", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public._overview_constraint.refschema</code>.
     */
    public static final Parameter<String> REFSCHEMA = createParameter("refschema", org.jooq.impl.SQLDataType.VARCHAR, false, false);

    /**
     * The parameter <code>public._overview_constraint.reftable</code>.
     */
    public static final Parameter<String> REFTABLE = createParameter("reftable", org.jooq.impl.SQLDataType.VARCHAR, false, false);

    /**
     * The parameter <code>public._overview_constraint.refcolumn</code>.
     */
    public static final Parameter<String> REFCOLUMN = createParameter("refcolumn", org.jooq.impl.SQLDataType.VARCHAR, false, false);

    /**
     * Create a new routine call instance
     */
    public _OverviewConstraint() {
        super("_overview_constraint", Public.PUBLIC, org.jooq.impl.SQLDataType.BOOLEAN);

        setReturnParameter(RETURN_VALUE);
        addInParameter(OV);
        addInParameter(FACTOR);
        addInParameter(REFSCHEMA);
        addInParameter(REFTABLE);
        addInParameter(REFCOLUMN);
    }

    /**
     * Set the <code>ov</code> parameter IN value to the routine
     */
    public void setOv(Object value) {
        setValue(OV, value);
    }

    /**
     * Set the <code>ov</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setOv(Field<Object> field) {
        setField(OV, field);
    }

    /**
     * Set the <code>factor</code> parameter IN value to the routine
     */
    public void setFactor(Integer value) {
        setValue(FACTOR, value);
    }

    /**
     * Set the <code>factor</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setFactor(Field<Integer> field) {
        setField(FACTOR, field);
    }

    /**
     * Set the <code>refschema</code> parameter IN value to the routine
     */
    public void setRefschema(String value) {
        setValue(REFSCHEMA, value);
    }

    /**
     * Set the <code>refschema</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRefschema(Field<String> field) {
        setField(REFSCHEMA, field);
    }

    /**
     * Set the <code>reftable</code> parameter IN value to the routine
     */
    public void setReftable(String value) {
        setValue(REFTABLE, value);
    }

    /**
     * Set the <code>reftable</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setReftable(Field<String> field) {
        setField(REFTABLE, field);
    }

    /**
     * Set the <code>refcolumn</code> parameter IN value to the routine
     */
    public void setRefcolumn(String value) {
        setValue(REFCOLUMN, value);
    }

    /**
     * Set the <code>refcolumn</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRefcolumn(Field<String> field) {
        setField(REFCOLUMN, field);
    }
}
