/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StOrderingequals extends AbstractRoutine<Boolean> {

    private static final long serialVersionUID = 905049792;

    /**
     * The parameter <code>public.st_orderingequals.RETURN_VALUE</code>.
     */
    public static final Parameter<Boolean> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.BOOLEAN, false, false);

    /**
     * The parameter <code>public.st_orderingequals.geometrya</code>.
     */
    public static final Parameter<Geometry> GEOMETRYA = createParameter("geometrya", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * The parameter <code>public.st_orderingequals.geometryb</code>.
     */
    public static final Parameter<Geometry> GEOMETRYB = createParameter("geometryb", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * Create a new routine call instance
     */
    public StOrderingequals() {
        super("st_orderingequals", Public.PUBLIC, org.jooq.impl.SQLDataType.BOOLEAN);

        setReturnParameter(RETURN_VALUE);
        addInParameter(GEOMETRYA);
        addInParameter(GEOMETRYB);
    }

    /**
     * Set the <code>geometrya</code> parameter IN value to the routine
     */
    public void setGeometrya(Geometry value) {
        setValue(GEOMETRYA, value);
    }

    /**
     * Set the <code>geometrya</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setGeometrya(Field<Geometry> field) {
        setField(GEOMETRYA, field);
    }

    /**
     * Set the <code>geometryb</code> parameter IN value to the routine
     */
    public void setGeometryb(Geometry value) {
        setValue(GEOMETRYB, value);
    }

    /**
     * Set the <code>geometryb</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setGeometryb(Field<Geometry> field) {
        setField(GEOMETRYB, field);
    }
}
