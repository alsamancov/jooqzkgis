/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.tables;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.sources.Public;
import org.jooq.sources.tables.records.StSubdivideRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StSubdivide extends TableImpl<StSubdivideRecord> {

    private static final long serialVersionUID = 1352579104;

    /**
     * The reference instance of <code>public.st_subdivide</code>
     */
    public static final StSubdivide ST_SUBDIVIDE = new StSubdivide();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StSubdivideRecord> getRecordType() {
        return StSubdivideRecord.class;
    }

    /**
     * The column <code>public.st_subdivide.st_subdivide</code>.
     */
    public final TableField<StSubdivideRecord, Geometry> ST_SUBDIVIDE_ = createField("st_subdivide", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "", new GeometryConverter());

    /**
     * Create a <code>public.st_subdivide</code> table reference
     */
    public StSubdivide() {
        this(DSL.name("st_subdivide"), null);
    }

    /**
     * Create an aliased <code>public.st_subdivide</code> table reference
     */
    public StSubdivide(String alias) {
        this(DSL.name(alias), ST_SUBDIVIDE);
    }

    /**
     * Create an aliased <code>public.st_subdivide</code> table reference
     */
    public StSubdivide(Name alias) {
        this(alias, ST_SUBDIVIDE);
    }

    private StSubdivide(Name alias, Table<StSubdivideRecord> aliased) {
        this(alias, aliased, new Field[2]);
    }

    private StSubdivide(Name alias, Table<StSubdivideRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StSubdivide as(String alias) {
        return new StSubdivide(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StSubdivide as(Name alias) {
        return new StSubdivide(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public StSubdivide rename(String name) {
        return new StSubdivide(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public StSubdivide rename(Name name) {
        return new StSubdivide(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public StSubdivide call(Geometry geom, Integer maxvertices) {
        return new StSubdivide(DSL.name(getName()), null, new Field[] { 
              DSL.val(geom, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"))
            , DSL.val(maxvertices, org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("256", org.jooq.impl.SQLDataType.INTEGER)))
        });
    }

    /**
     * Call this table-valued function
     */
    public StSubdivide call(Field<Geometry> geom, Field<Integer> maxvertices) {
        return new StSubdivide(DSL.name(getName()), null, new Field[] { 
              geom
            , maxvertices
        });
    }
}
