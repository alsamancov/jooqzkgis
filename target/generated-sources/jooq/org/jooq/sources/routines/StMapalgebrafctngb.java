/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
 */
@java.lang.Deprecated
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StMapalgebrafctngb extends AbstractRoutine<Object> {

    private static final long serialVersionUID = -1004789103;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RAST = createParameter("rast", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_mapalgebrafctngb.band</code>.
     */
    public static final Parameter<Integer> BAND = createParameter("band", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_mapalgebrafctngb.pixeltype</code>.
     */
    public static final Parameter<String> PIXELTYPE = createParameter("pixeltype", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.st_mapalgebrafctngb.ngbwidth</code>.
     */
    public static final Parameter<Integer> NGBWIDTH = createParameter("ngbwidth", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_mapalgebrafctngb.ngbheight</code>.
     */
    public static final Parameter<Integer> NGBHEIGHT = createParameter("ngbheight", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> ONERASTNGBUSERFUNC = createParameter("onerastngbuserfunc", org.jooq.impl.DefaultDataType.getDefaultDataType("regprocedure"), false, false);

    /**
     * The parameter <code>public.st_mapalgebrafctngb.nodatamode</code>.
     */
    public static final Parameter<String> NODATAMODE = createParameter("nodatamode", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>public.st_mapalgebrafctngb.args</code>.
     */
    public static final Parameter<String[]> ARGS = createParameter("args", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), false, false);

    /**
     * Create a new routine call instance
     */
    public StMapalgebrafctngb() {
        super("st_mapalgebrafctngb", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"));

        setReturnParameter(RETURN_VALUE);
        addInParameter(RAST);
        addInParameter(BAND);
        addInParameter(PIXELTYPE);
        addInParameter(NGBWIDTH);
        addInParameter(NGBHEIGHT);
        addInParameter(ONERASTNGBUSERFUNC);
        addInParameter(NODATAMODE);
        addInParameter(ARGS);
    }

    /**
     * Set the <code>rast</code> parameter IN value to the routine
     */
    public void setRast(Object value) {
        setValue(RAST, value);
    }

    /**
     * Set the <code>rast</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRast(Field<Object> field) {
        setField(RAST, field);
    }

    /**
     * Set the <code>band</code> parameter IN value to the routine
     */
    public void setBand(Integer value) {
        setValue(BAND, value);
    }

    /**
     * Set the <code>band</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setBand(Field<Integer> field) {
        setField(BAND, field);
    }

    /**
     * Set the <code>pixeltype</code> parameter IN value to the routine
     */
    public void setPixeltype(String value) {
        setValue(PIXELTYPE, value);
    }

    /**
     * Set the <code>pixeltype</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setPixeltype(Field<String> field) {
        setField(PIXELTYPE, field);
    }

    /**
     * Set the <code>ngbwidth</code> parameter IN value to the routine
     */
    public void setNgbwidth(Integer value) {
        setValue(NGBWIDTH, value);
    }

    /**
     * Set the <code>ngbwidth</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setNgbwidth(Field<Integer> field) {
        setField(NGBWIDTH, field);
    }

    /**
     * Set the <code>ngbheight</code> parameter IN value to the routine
     */
    public void setNgbheight(Integer value) {
        setValue(NGBHEIGHT, value);
    }

    /**
     * Set the <code>ngbheight</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setNgbheight(Field<Integer> field) {
        setField(NGBHEIGHT, field);
    }

    /**
     * Set the <code>onerastngbuserfunc</code> parameter IN value to the routine
     */
    public void setOnerastngbuserfunc(Object value) {
        setValue(ONERASTNGBUSERFUNC, value);
    }

    /**
     * Set the <code>onerastngbuserfunc</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setOnerastngbuserfunc(Field<Object> field) {
        setField(ONERASTNGBUSERFUNC, field);
    }

    /**
     * Set the <code>nodatamode</code> parameter IN value to the routine
     */
    public void setNodatamode(String value) {
        setValue(NODATAMODE, value);
    }

    /**
     * Set the <code>nodatamode</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setNodatamode(Field<String> field) {
        setField(NODATAMODE, field);
    }

    /**
     * Set the <code>args</code> parameter IN value to the routine
     */
    public void setArgs(String... value) {
        setValue(ARGS, value);
    }

    /**
     * Set the <code>args</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setArgs(Field<String[]> field) {
        setField(ARGS, field);
    }
}
