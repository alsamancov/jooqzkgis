/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StIscoveragetile extends AbstractRoutine<Boolean> {

    private static final long serialVersionUID = 451284477;

    /**
     * The parameter <code>public.st_iscoveragetile.RETURN_VALUE</code>.
     */
    public static final Parameter<Boolean> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.BOOLEAN, false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RAST = createParameter("rast", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> COVERAGE = createParameter("coverage", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_iscoveragetile.tilewidth</code>.
     */
    public static final Parameter<Integer> TILEWIDTH = createParameter("tilewidth", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_iscoveragetile.tileheight</code>.
     */
    public static final Parameter<Integer> TILEHEIGHT = createParameter("tileheight", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public StIscoveragetile() {
        super("st_iscoveragetile", Public.PUBLIC, org.jooq.impl.SQLDataType.BOOLEAN);

        setReturnParameter(RETURN_VALUE);
        addInParameter(RAST);
        addInParameter(COVERAGE);
        addInParameter(TILEWIDTH);
        addInParameter(TILEHEIGHT);
    }

    /**
     * Set the <code>rast</code> parameter IN value to the routine
     */
    public void setRast(Object value) {
        setValue(RAST, value);
    }

    /**
     * Set the <code>rast</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRast(Field<Object> field) {
        setField(RAST, field);
    }

    /**
     * Set the <code>coverage</code> parameter IN value to the routine
     */
    public void setCoverage(Object value) {
        setValue(COVERAGE, value);
    }

    /**
     * Set the <code>coverage</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setCoverage(Field<Object> field) {
        setField(COVERAGE, field);
    }

    /**
     * Set the <code>tilewidth</code> parameter IN value to the routine
     */
    public void setTilewidth(Integer value) {
        setValue(TILEWIDTH, value);
    }

    /**
     * Set the <code>tilewidth</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTilewidth(Field<Integer> field) {
        setField(TILEWIDTH, field);
    }

    /**
     * Set the <code>tileheight</code> parameter IN value to the routine
     */
    public void setTileheight(Integer value) {
        setValue(TILEHEIGHT, value);
    }

    /**
     * Set the <code>tileheight</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTileheight(Field<Integer> field) {
        setField(TILEHEIGHT, field);
    }
}
