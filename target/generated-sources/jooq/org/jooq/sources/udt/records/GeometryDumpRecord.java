/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.udt.records;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UDTRecordImpl;
import org.jooq.sources.udt.GeometryDump;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GeometryDumpRecord extends UDTRecordImpl<GeometryDumpRecord> implements Record2<Integer[], Geometry> {

    private static final long serialVersionUID = -450225659;

    /**
     * Setter for <code>public.geometry_dump.path</code>.
     */
    public void setPath(Integer... value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.geometry_dump.path</code>.
     */
    public Integer[] getPath() {
        return (Integer[]) get(0);
    }

    /**
     * Setter for <code>public.geometry_dump.geom</code>.
     */
    public void setGeom(Geometry value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.geometry_dump.geom</code>.
     */
    public Geometry getGeom() {
        return (Geometry) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer[], Geometry> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer[], Geometry> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer[]> field1() {
        return GeometryDump.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Geometry> field2() {
        return GeometryDump.GEOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] component1() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Geometry component2() {
        return getGeom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] value1() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Geometry value2() {
        return getGeom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GeometryDumpRecord value1(Integer... value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GeometryDumpRecord value2(Geometry value) {
        setGeom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GeometryDumpRecord values(Integer[] value1, Geometry value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GeometryDumpRecord
     */
    public GeometryDumpRecord() {
        super(GeometryDump.GEOMETRY_DUMP);
    }

    /**
     * Create a detached, initialised GeometryDumpRecord
     */
    public GeometryDumpRecord(Integer[] path, Geometry geom) {
        super(GeometryDump.GEOMETRY_DUMP);

        set(0, path);
        set(1, geom);
    }
}
