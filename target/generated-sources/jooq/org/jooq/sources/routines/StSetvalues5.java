/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;
import org.jooq.sources.udt.records.GeomvalRecord;



/**
 * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
 */
@java.lang.Deprecated
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StSetvalues5 extends AbstractRoutine<Object> {

    private static final long serialVersionUID = -1982244848;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final Parameter<Object> RAST = createParameter("rast", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false);

    /**
     * The parameter <code>public.st_setvalues.nband</code>.
     */
    public static final Parameter<Integer> NBAND = createParameter("nband", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.st_setvalues.geomvalset</code>.
     */
    public static final Parameter<GeomvalRecord[]> GEOMVALSET = createParameter("geomvalset", org.jooq.sources.udt.Geomval.GEOMVAL.getDataType().getArrayDataType(), false, false);

    /**
     * The parameter <code>public.st_setvalues.keepnodata</code>.
     */
    public static final Parameter<Boolean> KEEPNODATA = createParameter("keepnodata", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public StSetvalues5() {
        super("st_setvalues", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"));

        setReturnParameter(RETURN_VALUE);
        addInParameter(RAST);
        addInParameter(NBAND);
        addInParameter(GEOMVALSET);
        addInParameter(KEEPNODATA);
        setOverloaded(true);
    }

    /**
     * Set the <code>rast</code> parameter IN value to the routine
     */
    public void setRast(Object value) {
        setValue(RAST, value);
    }

    /**
     * Set the <code>rast</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setRast(Field<Object> field) {
        setField(RAST, field);
    }

    /**
     * Set the <code>nband</code> parameter IN value to the routine
     */
    public void setNband(Integer value) {
        setValue(NBAND, value);
    }

    /**
     * Set the <code>nband</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setNband(Field<Integer> field) {
        setField(NBAND, field);
    }

    /**
     * Set the <code>geomvalset</code> parameter IN value to the routine
     */
    public void setGeomvalset(GeomvalRecord... value) {
        setValue(GEOMVALSET, value);
    }

    /**
     * Set the <code>geomvalset</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setGeomvalset(Field<GeomvalRecord[]> field) {
        setField(GEOMVALSET, field);
    }

    /**
     * Set the <code>keepnodata</code> parameter IN value to the routine
     */
    public void setKeepnodata(Boolean value) {
        setValue(KEEPNODATA, value);
    }

    /**
     * Set the <code>keepnodata</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setKeepnodata(Field<Boolean> field) {
        setField(KEEPNODATA, field);
    }
}
