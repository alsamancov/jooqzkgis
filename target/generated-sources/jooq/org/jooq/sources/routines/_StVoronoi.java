/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.routines;


import com.vividsolutions.jts.geom.Geometry;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.sources.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _StVoronoi extends AbstractRoutine<Geometry> {

    private static final long serialVersionUID = -965671784;

    /**
     * The parameter <code>public._st_voronoi.RETURN_VALUE</code>.
     */
    public static final Parameter<Geometry> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * The parameter <code>public._st_voronoi.g1</code>.
     */
    public static final Parameter<Geometry> G1 = createParameter("g1", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), false, false, new GeometryConverter());

    /**
     * The parameter <code>public._st_voronoi.clip</code>.
     */
    public static final Parameter<Geometry> CLIP = createParameter("clip", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), true, false, new GeometryConverter());

    /**
     * The parameter <code>public._st_voronoi.tolerance</code>.
     */
    public static final Parameter<Double> TOLERANCE = createParameter("tolerance", org.jooq.impl.SQLDataType.DOUBLE.defaultValue(org.jooq.impl.DSL.field("0.0", org.jooq.impl.SQLDataType.DOUBLE)), true, false);

    /**
     * The parameter <code>public._st_voronoi.return_polygons</code>.
     */
    public static final Parameter<Boolean> RETURN_POLYGONS = createParameter("return_polygons", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), true, false);

    /**
     * Create a new routine call instance
     */
    public _StVoronoi() {
        super("_st_voronoi", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), new GeometryConverter());

        setReturnParameter(RETURN_VALUE);
        addInParameter(G1);
        addInParameter(CLIP);
        addInParameter(TOLERANCE);
        addInParameter(RETURN_POLYGONS);
    }

    /**
     * Set the <code>g1</code> parameter IN value to the routine
     */
    public void setG1(Geometry value) {
        setValue(G1, value);
    }

    /**
     * Set the <code>g1</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setG1(Field<Geometry> field) {
        setField(G1, field);
    }

    /**
     * Set the <code>clip</code> parameter IN value to the routine
     */
    public void setClip(Geometry value) {
        setValue(CLIP, value);
    }

    /**
     * Set the <code>clip</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setClip(Field<Geometry> field) {
        setField(CLIP, field);
    }

    /**
     * Set the <code>tolerance</code> parameter IN value to the routine
     */
    public void setTolerance(Double value) {
        setValue(TOLERANCE, value);
    }

    /**
     * Set the <code>tolerance</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setTolerance(Field<Double> field) {
        setField(TOLERANCE, field);
    }

    /**
     * Set the <code>return_polygons</code> parameter IN value to the routine
     */
    public void setReturnPolygons(Boolean value) {
        setValue(RETURN_POLYGONS, value);
    }

    /**
     * Set the <code>return_polygons</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setReturnPolygons(Field<Boolean> field) {
        setField(RETURN_POLYGONS, field);
    }
}
