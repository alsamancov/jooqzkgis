/*
 * This file is generated by jOOQ.
*/
package org.jooq.sources.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.TableRecordImpl;
import org.jooq.sources.tables.StApproxquantile;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StApproxquantileRecord extends TableRecordImpl<StApproxquantileRecord> implements Record16<Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = 698085850;

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(0);
    }

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>public.st_approxquantile.quantile</code>.
     */
    public void setQuantile(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.quantile</code>.
     */
    public Double getQuantile() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(14);
    }

    /**
     * Setter for <code>public.st_approxquantile.value</code>.
     */
    public void setValue(Double value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.st_approxquantile.value</code>.
     */
    public Double getValue() {
        return (Double) get(15);
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double> valuesRow() {
        return (Row16) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field1() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return StApproxquantile.ST_APPROXQUANTILE.QUANTILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field10() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field11() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field12() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field13() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field14() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field15() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field16() {
        return StApproxquantile.ST_APPROXQUANTILE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component1() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component10() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component11() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component12() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component13() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component14() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component15() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component16() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value1() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getQuantile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value10() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value11() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value12() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value13() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value14() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value15() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value16() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value1(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value2(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value3(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value4(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value5(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value6(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value7(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value8(Double value) {
        setQuantile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value9(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value10(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value11(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value12(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value13(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value14(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value15(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord value16(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StApproxquantileRecord values(Double value1, Double value2, Double value3, Double value4, Double value5, Double value6, Double value7, Double value8, Double value9, Double value10, Double value11, Double value12, Double value13, Double value14, Double value15, Double value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StApproxquantileRecord
     */
    public StApproxquantileRecord() {
        super(StApproxquantile.ST_APPROXQUANTILE);
    }

    /**
     * Create a detached, initialised StApproxquantileRecord
     */
    public StApproxquantileRecord(Double quantile, Double quantile, Double quantile, Double quantile, Double quantile, Double quantile, Double quantile, Double quantile, Double value, Double value, Double value, Double value, Double value, Double value, Double value, Double value) {
        super(StApproxquantile.ST_APPROXQUANTILE);

        set(0, quantile);
        set(1, quantile);
        set(2, quantile);
        set(3, quantile);
        set(4, quantile);
        set(5, quantile);
        set(6, quantile);
        set(7, quantile);
        set(8, value);
        set(9, value);
        set(10, value);
        set(11, value);
        set(12, value);
        set(13, value);
        set(14, value);
        set(15, value);
    }
}
